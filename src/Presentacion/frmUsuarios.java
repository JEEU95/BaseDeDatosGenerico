package Presentacion;

import Logica.Registro;
import Logica.Tablas;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jorge
 */
public class frmUsuarios extends javax.swing.JFrame {

    String user, pass;
    Tablas tabla;
    String comando = "GRANT ";
    ArrayList<Registro> usuarios = null;

    public frmUsuarios(String user, String pass) {
        this.user = user;
        this.pass = pass;
        this.tabla = new Tablas(user, pass);

        initComponents();
        
        btngAccion.add(rbGrant);
        btngAccion.add(rbRevoke);
/*
        lbOwner.setVisible(false);
        cmbOwner.setVisible(false);
        txtPrecaucion.setVisible(false);
        txtPrecaucion.setEditable(false);
        tbTablas.setEnabled(false);
*/
    }

    public void setUsuarios(ArrayList<Registro> usuarios) throws Exception {
        this.usuarios = usuarios;

        llenarUsuarios();
        listarPermisos();

    }
    
      @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Presentacion/gui/icono.png"));
        return retValue;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngAccion = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbUser = new javax.swing.JComboBox();
        rbGrant = new javax.swing.JRadioButton();
        rbRevoke = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstUser = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        cmbPermisos = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTablas = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtPrecaucion = new javax.swing.JTextArea();
        lbOwner = new javax.swing.JLabel();
        cmbOwner = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);

        jLabel1.setText("Usuario: ");

        cmbUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUserActionPerformed(evt);
            }
        });

        rbGrant.setSelected(true);
        rbGrant.setText("Conceder Permiso");
        rbGrant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbGrantActionPerformed(evt);
            }
        });

        rbRevoke.setText("Revocar Permiso");
        rbRevoke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRevokeActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(lstUser);

        jLabel2.setText("Permisos del usuario");

        cmbPermisos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ver cualquier tabla (o una especifica)", "Insertar cualquier tabla (o una especifica)", "Actualizar cualquier tabla (o una especifica)", "Eliminar cualquier tabla (o una especifica)", "Conectarse" }));
        cmbPermisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPermisosActionPerformed(evt);
            }
        });

        jLabel3.setText("Seleccione el usuario a modificar los permisos");

        jLabel4.setText("Accion a realizar:");

        jLabel5.setText("Lista de permisos: ");

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/gui/actualizar.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/gui/atras.png"))); // NOI18N
        btnAtras.setText("Atras");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        btnAceptar.setForeground(new java.awt.Color(0, 204, 0));
        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/gui/aceptar.png"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        tbTablas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DUEÑO", "NOMBRE DE LA TABLA"
            }
        ));
        jScrollPane2.setViewportView(tbTablas);

        txtPrecaucion.setBackground(java.awt.SystemColor.controlHighlight);
        txtPrecaucion.setColumns(20);
        txtPrecaucion.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        txtPrecaucion.setForeground(new java.awt.Color(255, 51, 51));
        txtPrecaucion.setRows(2);
        txtPrecaucion.setText("Precaución: Escoja una tabla. caso contrario estará \nconcediendo o revocando permisos sobre TODAS las tablas");
        jScrollPane4.setViewportView(txtPrecaucion);

        lbOwner.setText("Filtrar por dueño de la tabla:");

        cmbOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbOwnerActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/gui/Logo_UCuenca.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(rbRevoke)
                                    .addComponent(rbGrant)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(jLabel1)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(69, 69, 69)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addComponent(btnActualizar))
                                                    .addComponent(cmbPermisos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(33, 33, 33))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(cmbUser, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lbOwner)
                        .addGap(56, 56, 56)
                        .addComponent(cmbOwner, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(69, 69, 69))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbOwner)
                    .addComponent(cmbOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbGrant)
                            .addComponent(cmbPermisos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbRevoke)
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAceptar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAtras))
                            .addComponent(jLabel6))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed

        frmPrincipal atras;
        try {
            atras = new frmPrincipal(user, pass);
            atras.setVisible(true);
            dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al regresar a la ventana anterior");
        }
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void cmbPermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPermisosActionPerformed
        DefaultTableModel tb = (DefaultTableModel) tbTablas.getModel();

        int i = cmbPermisos.getSelectedIndex();
        if (i < 4) {
            lbOwner.setVisible(true);
            cmbOwner.setVisible(true);
            txtPrecaucion.setVisible(true);
            tbTablas.setEnabled(true);
            try {
                llenarTablaRegistros();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Error al llenar tabla");
            }
        } else {
            lbOwner.setVisible(false);
            cmbOwner.setVisible(false);
            txtPrecaucion.setVisible(false);
            tbTablas.setEnabled(false);
            tb.setRowCount(0);
        }
    }//GEN-LAST:event_cmbPermisosActionPerformed

    private void rbRevokeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRevokeActionPerformed
        
        comando = "REVOKE ";
    }//GEN-LAST:event_rbRevokeActionPerformed

    private void rbGrantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbGrantActionPerformed
        
        comando = "GRANT ";
    }//GEN-LAST:event_rbGrantActionPerformed

    private void cmbUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUserActionPerformed
        try {
            listarPermisos();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al listar permisos");
        }

    }//GEN-LAST:event_cmbUserActionPerformed

    private void cmbOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbOwnerActionPerformed
        try {
            llenarTablaRegistros();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al llenar tabla de registros");
        }
    }//GEN-LAST:event_cmbOwnerActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        String permisos[] = {"SELECT ","INSERT ","UPDATE ","DELETE ","CREATE "
                + "SESSION "};
       
        String com = comando;
        int i = cmbPermisos.getSelectedIndex();
        
        if (rbGrant.isSelected()) {
            com += permisos[i];
            if (i < 4) {
                if (cmbOwner.getSelectedItem().equals("--Todos--") || tbTablas.getSelectedRow()<0) {
                    com += "any table";
                } else {
                    int j = tbTablas.getSelectedRow();
                    com += "ON "+ tbTablas.getValueAt(j,0)+"."+tbTablas.getValueAt(j,1);
                }
                
            }
            com += " to " + cmbUser.getSelectedItem();
        } else if(rbRevoke.isSelected()){
            com += permisos[i];
            if (i < 4) {
                if (cmbOwner.getSelectedItem().equals("--Todos--")|| tbTablas.getSelectedRow()<0) {
                    com += "any table";
                } else {
                    int j = tbTablas.getSelectedRow();
                    com += "ON "+tbTablas.getValueAt(j,0)+"."+tbTablas.getValueAt(j,1);
                }

            }
            com += " from " + cmbUser.getSelectedItem();
            
        } else {
            JOptionPane.showMessageDialog(rootPane, "Seleccione la accion a realizar");
        }

        
        try {
            tabla.ejecutar(com);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al ejecutar el permiso");
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        try {
            listarPermisos();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error al listar permisos");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    public void llenarTablaRegistros() throws SQLException, Exception {

        

        DefaultTableModel tb = (DefaultTableModel) tbTablas.getModel();

        tb.setRowCount(0);
        System.out.println("Columnas eliminadas");

        ArrayList<Registro> registros = listarTablas();

        int i = 0;
        for (Registro reg : registros) {
            int j = 0;
            ArrayList datos = reg.getDatos();
            
            if (cmbOwner.getSelectedItem().equals("--Todos--") && cmbOwner.isVisible()) {
                tb.addRow(new Object[]{""});
                tb.setValueAt(datos.get(0), i, 0);
                tb.setValueAt(datos.get(1), i, 1);
                i++;

            } else {
                if (cmbOwner.getSelectedItem().equals(reg.getDatos().get(0))) {
                    tb.addRow(new Object[]{datos.get(0), datos.get(1)});

                }
            }

        }
    }

    public ArrayList<Registro> listarTablas() throws Exception {
        ArrayList<Registro> nombres = new ArrayList();

        Registro reg = new Registro();
        ArrayList<String> campos = new ArrayList();
        campos.add("OWNER");
        campos.add("TABLE_NAME");
        reg.setDatos(campos);
        reg.setDatos("DBA_TABLES");

        Object o = (Object) reg;

        try {

            nombres = tabla.listarDatos(o);

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(rootPane, "Error al listar tablas");
        }

        return nombres;

    }

    public void listarPermisos() throws Exception {
        ArrayList<Registro> permisos = null;

        Registro reg = new Registro();
        ArrayList<String> campos = new ArrayList();
        campos.add("PRIVILEGE");
        reg.setDatos(campos);
        reg.setDatos("SYS.DBA_SYS_PRIVS");
        reg.setDatos("WHERE GRANTEE='" + cmbUser.getSelectedItem() + "' ORDER BY PRIVILEGE ASC");

        Object o = (Object) reg;

        try {

            permisos = tabla.listarDatos(o);

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(rootPane, "Error al listar permisos");
        }

        DefaultListModel modelo = new DefaultListModel();
        for (Registro r : permisos) {
            modelo.addElement(r.getDatos().get(0));
        }

        lstUser.setModel(modelo);


    }

    public void llenarUsuarios() {
        cmbOwner.addItem("--Todos--");
        for (Registro u : usuarios) {
            cmbUser.addItem(u.getDatos().get(0));
            cmbOwner.addItem(u.getDatos().get(0));

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new frmUsuarios(user,pass).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAtras;
    private javax.swing.ButtonGroup btngAccion;
    private javax.swing.JComboBox cmbOwner;
    private javax.swing.JComboBox cmbPermisos;
    private javax.swing.JComboBox cmbUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbOwner;
    private javax.swing.JList lstUser;
    private javax.swing.JRadioButton rbGrant;
    private javax.swing.JRadioButton rbRevoke;
    private javax.swing.JTable tbTablas;
    private javax.swing.JTextArea txtPrecaucion;
    // End of variables declaration//GEN-END:variables
}
